CREATE TABLE USER_TYPE (
                        	IDT_USER INTEGER NOT NULL,
                        	DES_USER_TYPE VARCHAR(30)  NOT NULL,
                        	CONSTRAINT USER_TYPE_PK PRIMARY KEY (IDT_USER)
);

CREATE TABLE PERSON (
                     	IDT_PERSON INTEGER NOT NULL,
                        NAM_PERSON VARCHAR(50) NOT NULL,
                        NAM_LOGIN VARCHAR(50) NOT NULL,
                        COD_PASSWORD VARCHAR(50) NOT NULL,
                        CONSTRAINT PERSON_PK PRIMARY KEY (IDT_PERSON),
                        IDT_USER INTEGER NOT NULL,
                        CONSTRAINT PERSON_USER_FK FOREIGN KEY(IDT_USER) REFERENCES USER_TYPE(IDT_USER)
);

CREATE TABLE ACTOR (
                    	IDT_ACTOR INTEGER NOT NULL,
                        NAM_ACTOR VARCHAR(50) NOT NULL,
                        NUM_AGE_ACTOR INTEGER NOT NULL,
                        CONSTRAINT ACTOR_PK PRIMARY KEY (IDT_ACTOR)
);

CREATE TABLE NAME_CAST (
                        	IDT_NAME_CAST INTEGER NOT NULL,
                            CONSTRAINT NAME_CAST_PK PRIMARY KEY (IDT_NAME_CAST)
                          
);

CREATE TABLE CAST_ACTOR (
								IDT_NAME_CAST INTEGER NOT NULL,
								IDT_ACTOR INTEGER NOT NULL,
								CONSTRAINT CAST_ACTOR_PK PRIMARY KEY (IDT_NAME_CAST, IDT_ACTOR),
								CONSTRAINT CAST_ACTOR_ACTOR_FK FOREIGN KEY(IDT_ACTOR) REFERENCES ACTOR(IDT_ACTOR),
								CONSTRAINT CAST_ACTOR_NAME_CAST_FK FOREIGN KEY(IDT_NAME_CAST) REFERENCES NAME_CAST(IDT_NAME_CAST)						
);

CREATE TABLE DIRECTOR (
                       		IDT_DIRECTOR INTEGER NOT NULL,
                            NAM_DIRECTOR VARCHAR(50) NOT NULL,
                            NUM_AGE_DIRECTOR INTEGER NOT NULL,
                            CONSTRAINT DIRECTOR_FK PRIMARY KEY (IDT_DIRECTOR)
);

CREATE TABLE DIRECTION (	
							IDT_DIRECTOR INTEGER NOT NULL,
                            IDT_TITLE INTEGER NOT NULL,
                            CONSTRAINT DIRECTION_PK PRIMARY KEY(IDT_DIRECTOR, IDT_TITLE),
                            CONSTRAINT DIRECTION_DIRECTOR_FK FOREIGN KEY(IDT_DIRECTOR) REFERENCES DIRECTOR(IDT_DIRECTOR),
                            CONSTRAINT DIRECTION_TITLE_FK FOREIGN KEY(IDT_TITLE) REFERENCES TITLE(IDT_TITLE)
);

CREATE TABLE GENRE (
                    	IDT_GENRE INTEGER NOT NULL,
                        NAM_GENRE VARCHAR(30) NOT NULL,
                        CONSTRAINT GENRE_PK PRIMARY KEY(IDT_GENRE)
);

CREATE TABLE TITLE_GENRE (
	   						IDT_GENRE INTEGER NOT NULL,
       						IDT_TITLE INTEGER NOT NULL,
       						CONSTRAINT TITLE_GENRE_PK PRIMARY KEY(IDT_GENRE, IDT_TITLE),
       						CONSTRAINT TITLE_GENRE_GENRE_FK FOREIGN KEY(IDT_GENRE) REFERENCES GENRE(IDT_GENRE),
       						CONSTRAINT TITLE_GENRE_TITLE_FK FOREIGN KEY(IDT_TITLE) REFERENCES TITLE(IDT_TITLE)
);

CREATE TABLE TITLE_TYPE (
                         	IDT_TITLE_TYPE INTEGER NOT NULL,
                         	NAM_TYPE VARCHAR(30) NOT NULL,
                         	CONSTRAINT TITLE_TYPE_PK PRIMARY KEY (IDT_TITLE_TYPE)
);

CREATE TABLE TITLE (
                    	IDT_TITLE INTEGER NOT NULL,
                    	DES_CLASSIFICATION VARCHAR(30) NOT NULL,
                    	DAT_LAUNCH DATE NOT NULL,
                     	NAM_TITLE VARCHAR(50) NOT NULL,
                        VAL_DURATION VARCHAR(30) NOT NULL,
                        IDT_NAM_CAST INTEGER NOT NULL,
                        IDT_TITLE_TYPE INTEGER NOT NULL,
                        CONSTRAINT TITLE_PK PRIMARY KEY (IDT_TITLE),
                        CONSTRAINT TITLE_NAME_CAST_FK FOREIGN KEY(IDT_NAM_CAST) REFERENCES NAME_CAST(IDT_NAME_CAST),
                        CONSTRAINT TITLE_TITLE_TYPE_FK FOREIGN KEY(IDT_TITLE_TYPE) REFERENCES TITLE_TYPE(IDT_TITLE_TYPE)
 );

CREATE TABLE HISTORY (
                      	IDT_HISTORY INTEGER NOT NULL,
                        DAT_HISTORY DATE NOT NULL,
                        IDT_PERSON INTEGER NOT NULL,
                        IDT_TITLE INTEGER NOT NULL,
                        CONSTRAINT HISTORY_PK PRIMARY KEY (IDT_HISTORY),
                        CONSTRAINT HISTORY_PERSON_FK FOREIGN KEY(IDT_PERSON) REFERENCES PERSON(IDT_PERSON),
                        CONSTRAINT HISTORY_TITLE_FK FOREIGN KEY(IDT_TITLE) REFERENCES TITLE(IDT_TITLE)
);
